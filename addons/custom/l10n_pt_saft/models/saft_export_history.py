# -*- coding: utf-8 -*-

from odoo import models, fields, api
import datetime


class SaftExportHistory(models.Model):
    _name = 'l10n.pt.saft.export.history'
    _description = 'SAF-T Export History'
    _order = 'create_date desc'
    _rec_name = 'display_name'

    company_id = fields.Many2one(
        'res.company', 
        string='Company',
        required=True,
        default=lambda self: self.env.company
    )
    date_from = fields.Date(string='Start Date', required=True)
    date_to = fields.Date(string='End Date', required=True)
    export_type = fields.Selection([
        ('accounting', 'Accounting'),
        ('invoicing', 'Invoicing'),
        ('both', 'Both')
    ], string='Export Type', required=True)
    
    saft_file = fields.Binary(string='SAF-T File', required=True)
    saft_filename = fields.Char(string='Filename', required=True)
    file_size = fields.Float(string='File Size (KB)', compute='_compute_file_size')
    
    period_display = fields.Char(
        string='Period',
        compute='_compute_period_display',
        store=True
    )
    display_name = fields.Char(
        string='Display Name',
        compute='_compute_display_name',
        store=True
    )
    
    user_id = fields.Many2one(
        'res.users',
        string='Generated by',
        default=lambda self: self.env.user,
        required=True
    )

    @api.depends('saft_file')
    def _compute_file_size(self):
        for record in self:
            if record.saft_file:
                # Estimar tamanho baseado no base64 (aproximado)
                record.file_size = len(record.saft_file) * 3/4 / 1024  # KB
            else:
                record.file_size = 0.0

    @api.depends('date_from', 'date_to')
    def _compute_period_display(self):
        for record in self:
            if record.date_from and record.date_to:
                if record.date_from.year == record.date_to.year and record.date_from.month == record.date_to.month:
                    # Mesmo mês
                    record.period_display = f"{record.date_from.strftime('%B %Y')}"
                else:
                    # Período diferente
                    record.period_display = f"{record.date_from.strftime('%d/%m/%Y')} - {record.date_to.strftime('%d/%m/%Y')}"
            else:
                record.period_display = ''

    @api.depends('period_display', 'company_id', 'export_type')
    def _compute_display_name(self):
        for record in self:
            company_name = record.company_id.name if record.company_id else 'Unknown'
            export_type = dict(record._fields['export_type'].selection).get(record.export_type, record.export_type)
            record.display_name = f"SAF-T {record.period_display} - {company_name} ({export_type})"

    def action_download_file(self):
        """Ação para download do arquivo"""
        self.ensure_one()
        return {
            'type': 'ir.actions.act_url',
            'url': f'/web/content?model={self._name}&id={self.id}&field=saft_file&filename_field=saft_filename&download=true',
            'target': 'self',
        }

    def action_regenerate_saft(self):
        """Regenerar SAF-T com os mesmos parâmetros"""
        self.ensure_one()
        return {
            'type': 'ir.actions.act_window',
            'name': 'Export SAF-T',
            'res_model': 'l10n.pt.saft.export.wizard',
            'view_mode': 'form',
            'target': 'new',
            'context': {
                'default_company_id': self.company_id.id,
                'default_date_from': self.date_from,
                'default_date_to': self.date_to,
                'default_export_type': self.export_type,
            }
        }

    @api.model
    def create_history_record(self, wizard_data):
        """Criar registro histórico a partir do wizard"""
        return self.create({
            'company_id': wizard_data.company_id.id,
            'date_from': wizard_data.date_from,
            'date_to': wizard_data.date_to,
            'export_type': wizard_data.export_type,
            'saft_file': wizard_data.saft_file,
            'saft_filename': wizard_data.saft_filename,
        })
