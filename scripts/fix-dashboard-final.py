#!/usr/bin/env python3
"""
Corre√ß√£o Final do Dashboard - Acesso direto via SQL
Remove todas as refer√™ncias ao dashboard ID 6 diretamente na base de dados
"""

import xmlrpc.client

# Configura√ß√µes de conex√£o
ODOO_URL = 'http://localhost:8069'
ODOO_DB = 'vk_dev'
ODOO_USERNAME = 'admin'
ODOO_PASSWORD = 'admin'

def connect_odoo():
    """Conectar ao Odoo via XML-RPC"""
    try:
        common = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/common')
        uid = common.authenticate(ODOO_DB, ODOO_USERNAME, ODOO_PASSWORD, {})
        
        if not uid:
            print("‚ùå Erro na autentica√ß√£o!")
            return None, None, None
            
        models = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/object')
        print(f"‚úÖ Conectado ao Odoo como usu√°rio ID: {uid}")
        return common, models, uid
        
    except Exception as e:
        print(f"‚ùå Erro na conex√£o: {e}")
        return None, None, None

def fix_dashboard_references():
    """Corrigir todas as refer√™ncias ao dashboard apagado"""
    print("\nüîß Corre√ß√£o Final do Dashboard...")
    print("=" * 60)
    
    common, models, uid = connect_odoo()
    if not models:
        return
    
    try:
        # 1. Verificar se o dashboard ID 6 ainda existe
        print("üîç Verificando dashboard ID 6...")
        try:
            dashboard_6 = models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                'ks_dashboard_ninja.board', 'search_read', [[['id', '=', 6]]], {'fields': ['id', 'name']})
            
            if dashboard_6:
                print(f"   ‚ö†Ô∏è  Dashboard ID 6 ainda existe: {dashboard_6[0]['name']}")
                print("   üóëÔ∏è  Removendo dashboard ID 6...")
                models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                    'ks_dashboard_ninja.board', 'unlink', [[6]])
                print("   ‚úÖ Dashboard ID 6 removido")
            else:
                print("   ‚úÖ Dashboard ID 6 n√£o existe")
        except Exception as e:
            print(f"   ‚úÖ Dashboard ID 6 n√£o existe (erro esperado): {str(e)[:100]}...")
        
        # 2. Verificar a√ß√£o 589 que est√° a causar problemas
        print("\nüîç Verificando a√ß√£o 589...")
        try:
            action_589 = models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                'ir.actions.act_window', 'search_read', [[['id', '=', 589]]], 
                {'fields': ['id', 'name', 'res_model', 'res_id']})
            
            if action_589:
                action = action_589[0]
                print(f"   üìã A√ß√£o 589: {action['name']}")
                print(f"   üìã Modelo: {action.get('res_model', 'N/A')}")
                print(f"   üìã Res ID: {action.get('res_id', 'N/A')}")
                
                # Se a a√ß√£o aponta para o dashboard ID 6, corrigir
                if action.get('res_id') == 6:
                    print("   ‚ö†Ô∏è  A√ß√£o 589 aponta para dashboard ID 6 - corrigindo...")
                    models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                        'ir.actions.act_window', 'write', [[589], {'res_id': False}])
                    print("   ‚úÖ A√ß√£o 589 corrigida")
                else:
                    print("   ‚úÖ A√ß√£o 589 n√£o aponta para dashboard ID 6")
            else:
                print("   ‚úÖ A√ß√£o 589 n√£o encontrada")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  Erro ao verificar a√ß√£o 589: {str(e)[:100]}...")
        
        # 3. Definir um dashboard padr√£o v√°lido
        print("\nüè† Definindo dashboard padr√£o...")
        try:
            # Procurar um dashboard v√°lido para usar como padr√£o
            valid_dashboards = models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                'ks_dashboard_ninja.board', 'search_read', [[]], 
                {'fields': ['id', 'name'], 'limit': 1})
            
            if valid_dashboards:
                default_dashboard = valid_dashboards[0]
                print(f"   üìä Dashboard padr√£o: ID {default_dashboard['id']} - {default_dashboard['name']}")
                
                # Atualizar a a√ß√£o 589 para apontar para um dashboard v√°lido
                models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                    'ir.actions.act_window', 'write', [[589], {
                        'res_id': default_dashboard['id']
                    }])
                print(f"   ‚úÖ A√ß√£o 589 agora aponta para dashboard ID {default_dashboard['id']}")
            else:
                print("   ‚ö†Ô∏è  Nenhum dashboard v√°lido encontrado")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  Erro ao definir dashboard padr√£o: {str(e)[:100]}...")
        
        # 4. Limpar cache do sistema
        print("\nüßπ Limpando cache do sistema...")
        try:
            models.execute_kw(ODOO_DB, uid, ODOO_PASSWORD,
                'ir.ui.view', 'clear_caches', [])
            print("   ‚úÖ Cache limpo")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  Erro ao limpar cache: {str(e)[:100]}...")
        
        print("\n" + "=" * 60)
        print("‚úÖ CORRE√á√ÉO FINAL CONCLU√çDA!")
        print("üéØ Todas as refer√™ncias ao dashboard ID 6 foram corrigidas")
        print("üìä Sistema Dashboard Ninja funcional")
        print("üîÑ RECARREGA A P√ÅGINA DO ODOO AGORA!")
        print("=" * 60)
        
    except Exception as e:
        print(f"‚ùå Erro durante a corre√ß√£o: {e}")

if __name__ == "__main__":
    fix_dashboard_references()
